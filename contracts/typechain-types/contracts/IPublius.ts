/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export interface IPubliusInterface extends utils.Interface {
  functions: {
    "addChapter(uint256,string,string,uint256,string[],string[])": FunctionFragment;
    "addPage(uint256,uint256,string,string)": FunctionFragment;
    "tokenURI(uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "addChapter" | "addPage" | "tokenURI"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addChapter",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>[],
      PromiseOrValue<string>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addPage",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenURI",
    values: [PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(functionFragment: "addChapter", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "addPage", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "tokenURI", data: BytesLike): Result;

  events: {};
}

export interface IPublius extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IPubliusInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addChapter(
      _section: PromiseOrValue<BigNumberish>,
      _chapterName: PromiseOrValue<string>,
      _chapterImage: PromiseOrValue<string>,
      _chapterId: PromiseOrValue<BigNumberish>,
      _pageNames: PromiseOrValue<string>[],
      _pageContent: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addPage(
      _section: PromiseOrValue<BigNumberish>,
      _chapter: PromiseOrValue<BigNumberish>,
      _pageName: PromiseOrValue<string>,
      _pageContent: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    tokenURI(
      tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  addChapter(
    _section: PromiseOrValue<BigNumberish>,
    _chapterName: PromiseOrValue<string>,
    _chapterImage: PromiseOrValue<string>,
    _chapterId: PromiseOrValue<BigNumberish>,
    _pageNames: PromiseOrValue<string>[],
    _pageContent: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addPage(
    _section: PromiseOrValue<BigNumberish>,
    _chapter: PromiseOrValue<BigNumberish>,
    _pageName: PromiseOrValue<string>,
    _pageContent: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  tokenURI(
    tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    addChapter(
      _section: PromiseOrValue<BigNumberish>,
      _chapterName: PromiseOrValue<string>,
      _chapterImage: PromiseOrValue<string>,
      _chapterId: PromiseOrValue<BigNumberish>,
      _pageNames: PromiseOrValue<string>[],
      _pageContent: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    addPage(
      _section: PromiseOrValue<BigNumberish>,
      _chapter: PromiseOrValue<BigNumberish>,
      _pageName: PromiseOrValue<string>,
      _pageContent: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    tokenURI(
      tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    addChapter(
      _section: PromiseOrValue<BigNumberish>,
      _chapterName: PromiseOrValue<string>,
      _chapterImage: PromiseOrValue<string>,
      _chapterId: PromiseOrValue<BigNumberish>,
      _pageNames: PromiseOrValue<string>[],
      _pageContent: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addPage(
      _section: PromiseOrValue<BigNumberish>,
      _chapter: PromiseOrValue<BigNumberish>,
      _pageName: PromiseOrValue<string>,
      _pageContent: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    tokenURI(
      tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addChapter(
      _section: PromiseOrValue<BigNumberish>,
      _chapterName: PromiseOrValue<string>,
      _chapterImage: PromiseOrValue<string>,
      _chapterId: PromiseOrValue<BigNumberish>,
      _pageNames: PromiseOrValue<string>[],
      _pageContent: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addPage(
      _section: PromiseOrValue<BigNumberish>,
      _chapter: PromiseOrValue<BigNumberish>,
      _pageName: PromiseOrValue<string>,
      _pageContent: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    tokenURI(
      tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
