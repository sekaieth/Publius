/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPubliusFactory,
  IPubliusFactoryInterface,
} from "../../../contracts/IPublius.sol/IPubliusFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_publicationAuthorAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_publicationAuthorName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_publicationName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_publicationCoverImage",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_costToMint",
        type: "uint256",
      },
    ],
    name: "createPublication",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IPubliusFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IPubliusFactoryInterface {
    return new utils.Interface(_abi) as IPubliusFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPubliusFactory {
    return new Contract(address, _abi, signerOrProvider) as IPubliusFactory;
  }
}
